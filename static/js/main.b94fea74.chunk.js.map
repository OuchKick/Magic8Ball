{"version":3,"sources":["image/8ball.png","App.js","reportWebVitals.js","index.js"],"names":["App","useState","question","setQuestion","history","trigger","setTrigger","uri","encodeURIComponent","checkHistory","x","length","shift","push","Background","ContentContainer","MagicTitle","MagicBall","src","logo","checked","ResultContainer","Result","id","Input","placeholder","onChange","e","target","value","SubmitButton","onClick","match","fetch","then","response","json","console","log","document","getElementById","innerHTML","JSON","stringify","magic","answer","HistoryButton","window","alert","shake","keyframes","shakeWell","gradient","styled","h1","section","div","img","props","css","p","input","button","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"sNAAe,MAA0B,kC,cCwE1BA,MAlEf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KACA,GADA,KAC8BH,oBAAS,IAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAGIC,EAAM,0CADGC,mBAAmB,oCAsB1BC,EAAe,SAACP,EAAUQ,GACP,KAAnBN,EAAQO,QACVP,EAAQQ,QAENR,EAAQO,OAAS,IACnBP,EAAQS,KAAK,CAACX,EAAUQ,KAiB5B,OACE,cAACI,EAAD,UACA,eAACC,EAAD,WACE,cAACC,EAAD,2BAGA,cAACC,EAAD,CAAWC,IAAKC,EAAMC,QAASf,EAAS,aAAW,iBACnD,cAACgB,EAAD,UACE,cAACC,EAAD,CAAQC,GAAG,YAEb,cAACC,EAAD,CAAOC,YAAY,kBAAkBC,SAtBpB,SAACC,GAClBxB,EAAYwB,EAAEC,OAAOC,OACrBvB,GAAW,MAqBX,cAACwB,EAAD,CAAcP,GAAG,MAAMQ,QApDR,WACjBzB,GAAW,GAEPJ,EAAS8B,MAAM,sBACjBC,MAAM1B,GACL2B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACJC,QAAQC,IAAIF,GAEZG,SAASC,eAAe,SAASC,UAAYC,KAAKC,UAAUP,EAAKQ,MAAMC,QACvEpC,EAAaP,EAAUkC,EAAKQ,MAAMC,WAIpCN,SAASC,eAAe,SAASC,UAAY,2BAsC7C,oBACA,cAACK,EAAD,CAAef,QAlBE,WACnBgB,OAAOC,MAAM5C,IAiBX,2BASA6C,EAAQC,YAAH,wvBAuCLC,EAAYD,YAAH,4vBAsCTE,EAAWF,YAAH,4JAYRlC,EAAaqC,IAAOC,GAAV,kHAOVxC,EAAauC,IAAOE,QAAV,yNAIFH,GAMRrC,EAAmBsC,IAAOG,IAAV,+HAQhBvC,EAAYoC,IAAOI,IAAV,oKAKER,GAEb,SAAAS,GAAK,OAAKA,EAAMtC,SAAYuC,YAAlB,IAAD,gDACER,MAIT9B,EAAkBgC,IAAOG,IAAV,uJAQflC,EAAS+B,IAAOO,EAAV,uEAKNpC,EAAQ6B,IAAOQ,MAAV,gZAmBL/B,EAAeuB,IAAOS,OAAV,+VAkBZhB,EAAgBO,IAAOS,OAAV,sWChPJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAO,cAAC,EAAD,IAASjC,SAASC,eAAe,SAKjDuB,M","file":"static/js/main.b94fea74.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/8ball.dac8179e.png\";","import React, {useState} from 'react';\nimport logo from './image/8ball.png'\nimport styled, {keyframes, css} from 'styled-components';\n\n\n\nfunction App() {\n  const [question, setQuestion] = useState('');\n  const [history, setHistory] = useState([]);\n  const [trigger, setTrigger] = useState(false);\n\n  let params = encodeURIComponent(\"Is today going to be a good day?\");\n  let uri = \"https://8ball.delegator.com/magic/JSON/\" + params;\n \n  const myFunction = () => {\n    setTrigger(true);\n    // Regex to confirm that there's letters, spaces, and question marks for the question\n    if (question.match(/^[A-Za-z'0-9 ]+[?]/)) {\n      fetch(uri)\n      .then(response => response.json())\n      .then(json => {\n        console.log(json);\n        // Inserts answer into Div\n        document.getElementById(\"query\").innerHTML = JSON.stringify(json.magic.answer);\n        checkHistory(question, json.magic.answer);\n      }) \n    } else {\n      // If question does not have a question mark, else runs\n      document.getElementById(\"query\").innerHTML = \"That wasn't a question.\";\n    } \n  };\n\n  // Removes an entry if over 10 entries available\n  const checkHistory = (question, x) => {\n    if (history.length === 10) {\n      history.shift();\n    } \n    if (history.length < 10) {\n      history.push([question, x]);\n    }\n  };\n\n    // Set state for question and trigger animation effect\n  const questionFunc = (e) => {\n      setQuestion(e.target.value);\n      setTrigger(false);\n    };\n\n    // Alert will display history\n  const historyAlert = () => {\n    window.alert(history);\n  };\n\n\n\n  return (\n    <Background>\n    <ContentContainer>\n      <MagicTitle>\n        Magic 8-Ball\n      </MagicTitle>\n      <MagicBall src={logo} checked={trigger} aria-label=\"Magic 8-Ball\"/>\n      <ResultContainer>\n        <Result id=\"query\"></Result>\n      </ResultContainer>\n      <Input placeholder=\"Got a question?\" onChange={questionFunc}/>\n      <SubmitButton id=\"btn\" onClick={myFunction}>Submit</SubmitButton>\n      <HistoryButton onClick={historyAlert}>History</HistoryButton>\n    </ContentContainer>\n    </Background>\n  );\n}\nexport default App;\n\n\n\nconst shake = keyframes`\n0% { \n  transform: translate(1px, 1px) rotate(1deg); \n}\n  10% { \n    transform: translate(-1px, -2px) rotate(-1deg); \n  }\n  20% { \n    transform: translate(-3px, 0px) rotate(1deg); \n  }\n  30% { \n    transform: translate(3px, 2px) rotate(0deg); \n  }\n  40% { \n    transform: translate(1px, -1px) rotate(1deg); \n  }\n  50% { \n    transform: translate(-1px, 2px) rotate(-1deg); \n  }\n  60% { \n    transform: translate(-3px, 1px) rotate(0deg); \n  }\n  70% { \n    transform: translate(3px, 1px) rotate(-1deg); \n  }\n  80% { \n    transform: translate(-1px, -1px) rotate(1deg); \n  }\n  90% { \n    transform: translate(1px, 2px) rotate(0deg); \n  }\n  100% { \n    transform: translate(1px, 1px) rotate(-1deg); \n  }\n`;\n\n\n\n\nconst shakeWell = keyframes`\n0% { \n  transform: translate(1px, 1px) rotate(10deg); \n}\n  10% { \n    transform: translate(-1px, -2px) rotate(-10deg); \n  }\n  20% { \n    transform: translate(-3px, 0px) rotate(11deg); \n  }\n  30% { \n    transform: translate(3px, 2px) rotate(0deg); \n  }\n  40% { \n    transform: translate(1px, -1px) rotate(1deg); \n  }\n  50% { \n    transform: translate(-1px, 2px) rotate(-15deg); \n  }\n  60% { \n    transform: translate(-3px, 1px) rotate(0deg); \n  }\n  70% { \n    transform: translate(3px, 1px) rotate(-1deg); \n  }\n  80% { \n    transform: translate(-1px, -1px) rotate(1deg); \n  }\n  90% { \n    transform: translate(1px, 2px) rotate(0deg); \n  }\n  100% { \n    transform: translate(1px, 1px) rotate(-1deg); \n  }\n`;\n\n\n\nconst gradient = keyframes`\n0% {\n  background-position: 0% 50%;\n}\n50% {\n  background-position: 100% 50%;\n}\n100% {\n  background-position: 0% 50%;\n}\n`;\n\nconst MagicTitle = styled.h1`\n    font-size: 60px;\n    @media (min-width: 320px) {\n      font-size: 50px;\n    }\n`;\n\nconst Background = styled.section`\n  position: absolute;\n\tbackground: linear-gradient(-45deg, #f25f25, #25b8f2);\n\tbackground-size: 300% 300%;\n\tanimation: ${gradient} 10s ease infinite;\n\tmin-height: 100%;\n  min-width: 100%;\n`;\n\n\nconst ContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: Josefin Sans;\n`;\n\n\nconst MagicBall = styled.img`\n  height: 300px;\n  width: 300px;\n  transition: transform 250ms ease-in-out;\n  &:hover {\n    animation: ${shake} 2s infinite;\n  }\n  ${props => (props.checked) && css`\n  animation: ${shakeWell} .5s;\n  `}\n`;\n\nconst ResultContainer = styled.div`\n  margin-top: 15px;\n  width: 200px;\n  height: 75px;\n  background-color: rgba(88, 88, 88, .25);\n  border-radius: 15px;\n`;\n\nconst Result = styled.p`\n  text-align: center;\n  font-size: 20px;\n`\n\nconst Input = styled.input`\n  width: 300px;\n  height: 100px;\n  border-radius: 50px;\n  font-family: Josefin Sans;\n  font-size: 20px;\n  margin-top: 15px;\n  background: rgba( 255, 255, 255, 0.25 );\n  backdrop-filter: blur( 6px );\n  -webkit-backdrop-filter: blur( 6px );\n   border: none;\n   color: #fff;\n  ::placeholder {\n    text-align: center;\n    font-size: 20px;\n    color: #fff;\n  }\n`;\n\nconst SubmitButton = styled.button`\nwidth: 200px;\nheight: 100px;\nborder-radius: 50px;\nfont-family: Josefin Sans;\nfont-size: 20px;\nmargin-top: 15px;\nbackground: rgba( 255, 255, 255, 0.25 );\nbackdrop-filter: blur( 6px );\n-webkit-backdrop-filter: blur( 6px );\nborder: none;\ncolor: #fff;\n&:hover {\n  transform: scale(1.1);\n  background: #25b8f2;\n}\n`;\n\nconst HistoryButton = styled.button`\nwidth: 200px;\nheight: 100px;\nborder-radius: 50px;\nfont-family: Josefin Sans;\nfont-size: 20px;\nmargin: 15px 0px 10px 0;\nbackground: rgba( 255, 255, 255, 0.25 );\nbackdrop-filter: blur( 6px );\n-webkit-backdrop-filter: blur( 6px );\nborder: none;\ncolor: #fff;\n&:hover {\n  transform: scale(1.1);\n  background: #f25f25;\n}\n`;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}